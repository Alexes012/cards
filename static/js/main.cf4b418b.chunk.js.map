{"version":3,"sources":["components/header/Header.module.css","components/header/Link.module.css","helpComponents/button/Button.module.css","components/03_Registration/ui/Registration.module.css","images/friday.jpg","components/01_Profile/ui/Profile.module.css","components/02_Login/ui/Login.module.css","components/04_ForgotPassword/ui/Forgot.module.css","components/05_Decks/ui/Decks.module.css","components/header/Link.tsx","components/header/Header.tsx","components/01_Profile/ui/Profile.tsx","helpComponents/button/Button.tsx","helpComponents/input/Input.tsx","api/api.ts","components/02_Login/api/loginAPI.ts","components/02_Login/bll/LoginReducer.ts","components/02_Login/ui/Login.tsx","components/03_Registration/api/RegistrationApi.ts","components/03_Registration/bll/RegistrationReducer.ts","components/03_Registration/ui/Registration.tsx","components/04_ForgotPassword/ui/Forgot.tsx","components/05_Decks/ui/Decks.tsx","main/routes/Routes.tsx","bll/store.ts","main/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Link","props","className","styles","containerForLink","animation","link","linkDecor","to","name","Header","main","container","logo","src","mainFridayImg","nameOfPages","phone","borderPhone","React","Component","Profile","profile","Button","button","color","red","blue","disabled","onClick","onChange","value","description","Input","instance","type","placeholder","input","onBlur","checked","axios","create","baseURL","loginAPI","email","password","rememberMe","post","then","resp","data","setLoadingAC","loading","Login","useState","setEmail","pass","setPass","setRememberMe","dispatch","useDispatch","useSelector","state","login","error","success","textError","length","wrapper","event","target","console","log","currentTarget","a","err","response","LoginThunk","RegisterAPI","initialState","setErrorAC","Registration","setPassword","confirmPassword","setConfirmPassword","invalidField","setEmailCallback","useCallback","e","setPasswordCallback","setConfirmPasswordCallback","registerCallback","confirmedPassword","match","registerThunk","store","registration","message","Forgot","forgot","Decks","decks","pages","id","title","path","component","Routes","map","p","key","exact","render","reducers","combineReducers","action","createStore","applyMiddleware","thunkMiddleware","App","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister","catch"],"mappings":"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","file":"static/js/main.cf4b418b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Header_main__3PntJ\",\"container\":\"Header_container__1EQmh\",\"logo\":\"Header_logo__3Bjkx\",\"nameOfPages\":\"Header_nameOfPages__2I78T\",\"phone\":\"Header_phone__3jSC9\",\"borderPhone\":\"Header_borderPhone__10rQR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__EkV9S\",\"linkDecor\":\"Link_linkDecor__3xQVe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__nJZTL\",\"red\":\"Button_red__k3TLN\",\"blue\":\"Button_blue__2ovdY\",\"disabled\":\"Button_disabled__1wEmC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__1IDFK\"};","module.exports = __webpack_public_path__ + \"static/media/friday.7d2881bc.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__MLskB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__3ieaS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgot\":\"Forgot_forgot__2XXUO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"decks\":\"Decks_decks__2O2gA\"};","import React from 'react';\r\nimport styles from \"./Link.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nfunction Link(props: any) {\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.containerForLink}>\r\n                <div className={styles.animation}/>\r\n                <div className={styles.link}>\r\n                    <NavLink className={styles.linkDecor} to={props.link}>{props.name}</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Link;","import React from \"react\";\r\nimport styles from './Header.module.css'\r\nimport Link from \"./Link\";\r\nimport mainFridayImg from \"../../images/friday.jpg\"\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={styles.main}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.logo}>\r\n                        <img src={mainFridayImg}/>\r\n                    </div>\r\n                    <div className={styles.nameOfPages}>\r\n                        <Link link=\"./profile\" name=\"Profile\"/>\r\n                        <Link link=\"./decks\" name=\"Decks\"/>\r\n                        <Link link=\"./registration\" name=\"Registation\"/>\r\n                        <Link link=\"./forgot\" name=\"Forgot\"/>\r\n                        <Link link=\"./login\" name=\"Login\"/>\r\n                    </div>\r\n                    <div className={styles.phone}>\r\n                        <div className={styles.borderPhone}>ava+nick profile</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport styles from './Profile.module.css'\r\n\r\nfunction Profile() {\r\n    return (\r\n        <div className={styles.profile}>\r\n            <h1>PROFILE</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport styles from './Button.module.css'\r\n\r\nfunction Button(props: any) {\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                className={`${styles.button}\r\n                ${props.color === 'red' ? styles.red : styles.blue}\r\n                ${props.disabled && styles.disabled}`}\r\n                onClick={props.onClick}\r\n                onChange={props.onChange}\r\n                value={props.value}\r\n                disabled={props.disabled}\r\n            >\r\n                {props.description}\r\n            </button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport styles from \"./Input.module.css\";\r\n\r\nfunction Input(props: any) {\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={props.type ? props.type : \"text\"}\r\n                placeholder={props.placeholder} className={styles.input}\r\n                onClick={props.onClick}\r\n                onChange={props.onChange}\r\n                value={props.value}\r\n                onBlur={props.onBlur}\r\n                checked={props.checked}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Input;","import axios, {AxiosInstance} from 'axios';\r\n\r\n\r\nexport const baseURL = 'http://localhost:7542/1.0/'\r\n\r\nexport let instance: AxiosInstance;\r\ninstance = axios.create({\r\n    baseURL\r\n});","import {instance} from '../../../api/api';\r\n\r\n\r\nexport const loginAPI = {\r\n    loginIn(email: string,password: string, rememberMe: boolean) {\r\n        return instance.post('/auth/login', {email,password, rememberMe})\r\n            .then(resp => resp.data)\r\n    }\r\n}","import {loginAPI} from '../api/loginAPI';\r\nimport {Dispatch} from 'react';\r\nconst SET_LOADING = 'SET_LOADING'\r\nconst SET_ERROR = 'SET_ERROR'\r\nconst SET_SUCCESS = 'SET_SUCCESS'\r\n\r\nlet initialState = {\r\n    loading: false,\r\n    error: '',\r\n    success: false\r\n\r\n};\r\ntype LoadingType = {\r\n    type: typeof SET_LOADING\r\n    loading: boolean\r\n}\r\ntype SuccessType ={\r\n    type: typeof SET_SUCCESS\r\n    success: boolean\r\n}\r\ntype ErrorType ={\r\n    type: typeof SET_ERROR\r\n    error: string\r\n}\r\ntype InitialStateType = typeof initialState\r\ntype LoginActionTypes = ErrorType | SuccessType | LoadingType\r\n\r\nconst LoginReducer = (state: InitialStateType = initialState, action: LoginActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_LOADING': return {\r\n            ...state,\r\n            loading: action.loading\r\n        }\r\n        case 'SET_ERROR': return {\r\n            ...state,\r\n            error: action.error\r\n        }\r\n        case 'SET_SUCCESS':\r\n            return {\r\n            ...state,\r\n            success: action.success\r\n        }\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport default LoginReducer;\r\n\r\n\r\nconst setLoadingAC = (loading: boolean):LoadingType => ( {type: SET_LOADING, loading} )\r\nconst setErrorAC = (error: string): ErrorType => ( {type: SET_ERROR, error} )\r\nconst setSuccessAC = (success: boolean):SuccessType => ( {type: SET_SUCCESS, success} )\r\n\r\n\r\nexport const LoginThunk = (email: string, password: string, rememberMe: boolean) =>\r\n    async (dispatch: Dispatch<LoginActionTypes>) => {\r\n        dispatch(setLoadingAC(true))\r\n        try {\r\n            await loginAPI.loginIn(email, password, rememberMe);\r\n            dispatch(setLoadingAC(false))\r\n            dispatch(setSuccessAC(true))\r\n        } catch (e) {\r\n            const err = e.response.data.error;\r\n            dispatch(setLoadingAC(false))\r\n            dispatch(setErrorAC(err))\r\n\r\n        }\r\n\r\n    }","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport styles from './Login.module.css'\r\nimport Button from \"../../../helpComponents/button/Button\";\r\nimport Input from \"../../../helpComponents/input/Input\";\r\nimport {instance} from '../../../api/api';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { LoginThunk } from '../bll/LoginReducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState<string>('test@email.nya')\r\n    const [pass, setPass] = useState<string>('test@email.nya123')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(true);\r\n    const dispatch = useDispatch()\r\n    const {loading, error, success} = useSelector((state:any) => state.login);\r\n\r\n    const onEmailChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.target.value)\r\n    }\r\n    const onCheckboxChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        console.log(event.currentTarget.checked)\r\n        setRememberMe(event.currentTarget.checked)\r\n    }\r\n    const onPassChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPass(event.target.value)\r\n    }\r\n    const onSumbitHandler = () => {\r\n        dispatch(LoginThunk(email, pass, rememberMe))\r\n    }\r\n    const textError = error.length > 0 ? error: ''\r\n    if(success){\r\n       return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {loading && '...Loading'}\r\n            {textError}\r\n            <Input placeholder=\"Email\" value={email} onChange={onEmailChange}/>\r\n            <Input placeholder=\"Password\" type=\"password\" value={pass} onChange={onPassChange}/>\r\n            <Input type={'checkbox'} checked={rememberMe} onChange={onCheckboxChange} /> remember me\r\n           <Button description=\"Login\" color='blue' onClick={onSumbitHandler} disabled={loading}/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Login;","import axios from \"axios\"\r\n\r\ntype responseType = {\r\n    addedUser: {email: string, isAdmin: boolean, __v: number, _id: string}\r\n    success: boolean\r\n};\r\n\r\nexport const RegisterAPI = {\r\n    register: (email: string, password: string) => {\r\n        return axios.post<responseType>\r\n        ('http://localhost:7542/1.0/auth/register',{email, password});\r\n    }\r\n};\r\n","import {RegisterAPI} from '../api/RegistrationApi'\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {storeType} from '../../../bll/store'\r\n\r\nconst SET_SUCCESS = 'SET_SUCCESS';\r\nconst SET_ERROR = 'SET_ERROR';\r\nconst SET_LOADING = 'SET_LOADING';\r\n\r\ntype actionTypes = setSuccessAction | setErrorAction | setLoadingAction;\r\n\r\ntype setSuccessAction = {\r\n    type: typeof SET_SUCCESS,\r\n    success: boolean\r\n};\r\n\r\ntype setErrorAction = {\r\n    type: typeof SET_ERROR,\r\n    error: string\r\n};\r\n\r\ntype setLoadingAction = {\r\n    type: typeof SET_LOADING,\r\n    loading: boolean\r\n};\r\n\r\nexport type initialStateType = {\r\n    loading: boolean,\r\n    success: boolean,\r\n    error: string,\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: ''\r\n};\r\n\r\n\r\nexport const RegistrationReducer = (state = initialState, action: actionTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case SET_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: action.success,\r\n                error: '',\r\n                loading: false\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                error: action.error\r\n            };\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nconst setSuccessAC = (success: boolean): setSuccessAction => ({\r\n    type: SET_SUCCESS,\r\n    success\r\n});\r\n\r\nconst setErrorAC = (error: string): setErrorAction => ({\r\n    type: SET_ERROR,\r\n    error\r\n});\r\n\r\nconst setLoadingAC = (loading: boolean): setLoadingAction => ({\r\n    type: SET_LOADING,\r\n    loading\r\n});\r\n\r\nexport const registerThunk = (email: string, password: string, confirmedPassword: string)\r\n    : ThunkAction<Promise<void>, storeType, unknown, actionTypes> => {\r\n    return async (dispatch: ThunkDispatch<storeType, unknown, actionTypes>) => {\r\n        dispatch(setLoadingAC(true));\r\n        if (password !== confirmedPassword)\r\n            dispatch(setErrorAC('Password is not match'));\r\n        else if (email === '' || password === '' || confirmedPassword === '')\r\n            dispatch(setErrorAC('All field is required!'));\r\n        else if (password.length <= 7 || confirmedPassword.length <= 7)\r\n            dispatch(setErrorAC('password must be more than 7 char!'));\r\n        else if (!email.match(/^[\\w][\\w-.]*@[\\w-]+\\.[a-z]{2,7}$/i))\r\n            dispatch(setErrorAC('Email is not valid!'));\r\n        else {\r\n            try {\r\n                await RegisterAPI.register(email, password);\r\n                dispatch(setSuccessAC(true));\r\n            } catch (e) {\r\n                const err = e.response.data.error;\r\n                dispatch(setErrorAC(err))\r\n            }\r\n        }\r\n    }\r\n};","import React, {ChangeEvent, useCallback, useState} from 'react'\r\nimport styles from './Registration.module.css'\r\nimport Input from \"../../../helpComponents/input/Input\";\r\nimport Button from \"../../../helpComponents/button/Button\";\r\nimport {storeType} from \"../../../bll/store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerThunk} from \"../bll/RegistrationReducer\";\r\n\r\nfunction Registration() {\r\n\r\n    let [email, setEmail] = useState<string>('');\r\n    let [password, setPassword] = useState<string>('');\r\n    let [confirmPassword, setConfirmPassword] = useState<string>('');\r\n    let validateMessage = '';\r\n    let [invalidField] = useState<boolean>(false);\r\n\r\n      const setEmailCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value),\r\n        [setEmail]\r\n    );\r\n\r\n    const setPasswordCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setPassword(e.target.value),\r\n        [setPassword]\r\n    );\r\n\r\n    const setConfirmPasswordCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setConfirmPassword(e.target.value),\r\n        [setConfirmPassword]\r\n    );\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const registerCallback = useCallback(() => {\r\n            if (validateMessage === '') {\r\n                dispatch(registerThunk(email, password, confirmPassword))\r\n            }\r\n        },\r\n        [email, password, confirmPassword, validateMessage, dispatch]\r\n    );\r\n\r\n    const {error, loading} = useSelector((store: storeType) => store.registration)\r\n\r\n\r\n    return (\r\n        <div className={styles.registration}>\r\n            <Input type='email' placeholder={'Email'} value={email} onChange={setEmailCallback}/>\r\n            <Input type='password' placeholder={'password'} value={password} onChange={setPasswordCallback}/>\r\n            <Input type='password' placeholder={'confirm password'} value={confirmPassword}\r\n                   onChange={setConfirmPasswordCallback}/>\r\n            <Button description={'Register'} onClick={registerCallback}/>\r\n            {invalidField && <div className={styles.message}>{validateMessage}</div>}\r\n            {error && <div className={styles.message}>{error}</div>}\r\n            {loading && <div>Loading</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration;","import React from 'react'\r\nimport styles from './Forgot.module.css'\r\n\r\nfunction Forgot() {\r\n    return (\r\n        <div className={styles.forgot}>\r\n            <h1>FORGOT PASSWORD</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forgot;","import React from 'react'\r\nimport styles from './Decks.module.css'\r\n\r\nfunction Decks() {\r\n    return (\r\n        <div className={styles.decks}>\r\n            <h1>DECKS</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Decks;","import React from 'react';\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport Profile from \"../../components/01_Profile/ui/Profile\";\r\nimport Login from \"../../components/02_Login/ui/Login\";\r\nimport Registration from \"../../components/03_Registration/ui/Registration\";\r\nimport Forgot from \"../../components/04_ForgotPassword/ui/Forgot\";\r\nimport Decks from \"../../components/05_Decks/ui/Decks\";\r\n\r\n\r\ntype PageType = {\r\n    id: number;\r\n    title: string;\r\n    path?: string;\r\n    exact?: boolean;\r\n    component: any;\r\n};\r\n\r\nconst pages: Array<PageType> = [\r\n    {id: 0, title: 'profile', path: '/profile', component: () => <Profile/>},\r\n    {id: 1, title: 'login', path: '/login', component: () => <Login/>},\r\n    {id: 2, title: 'registration', path: '/registration', component: () => <Registration/>},\r\n    {id: 3, title: 'forgot', path: '/forgot', component: () => <Forgot/>},\r\n    {id: 4, title: 'decks', path: '/decks', component: () => <Decks/>},\r\n];\r\n\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            {pages.map(p => (\r\n                <Route\r\n                    key={p.id}\r\n                    path={p.path}\r\n                    exact={p.exact}\r\n                    render={p.component}\r\n                />\r\n            ))}\r\n        </Switch>\r\n    )\r\n};\r\n\r\nexport default Routes;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport ProfileReducer from \"../components/01_Profile/bll/ProfileReducer\"\r\nimport LoginReducer from \"../components/02_Login/bll/LoginReducer\"\r\nimport {RegistrationReducer} from \"../components/03_Registration/bll/RegistrationReducer\"\r\nimport ForgotReducer from \"../components/04_ForgotPassword/bll/ForgotReducer\"\r\nimport DecksReducer from \"../components/05_Decks/bll/DecksReducer\"\r\n\r\n\r\nconst reducers = combineReducers( {\r\n    // profile: ProfileReducer,\r\n    // login: LoginReducer,\r\n    registration: RegistrationReducer,\r\n    // forgot: ForgotReducer,\r\n    // decks: DecksReducer\r\n});\r\n\r\nexport const store = createStore (reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport type storeType = ReturnType<typeof reducers>","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Header from \"../components/header/Header\";\r\nimport Routes from \"./routes/Routes\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"../bll/store\";\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <div className=\"App\">\r\n                    <Header/>\r\n                    <Routes/>\r\n                </div>\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n            <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}